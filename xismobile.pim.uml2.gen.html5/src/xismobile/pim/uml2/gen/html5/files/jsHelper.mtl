[comment encoding = UTF-8 /]
[module jsHelper('http://www.eclipse.org/uml2/4.0.0/UML')]

[import xismobile::pim::uml2::gen::html5::common::utils /]
[import xismobile::pim::uml2::gen::html5::common::xisWebUtils /]

[template public generateJSHelper(m : Model)]

[file ('src/js/'.concat(m.name.toLower()).concat('.js'), false, 'UTF-8')]

[comment This file will have 2 areas: General DB JS Instrumentation and Specific site JS functions /]

[name.toLower()/].db = {}

//Holding database instance inside a global variable
[name.toLower()/].open = function(){
	[name.toLower()/].db = openDatabase("[name/]", "2.0", "[name.toUpperFirst()/] DB", 5 * 1024 * 1024);	
}

[for (c : Class | m.getAllXisEntities())]
	[createTable(c)/]
	[insertEntityIntoDB(c)/]
	[comment][selectAllFromTable(c)/][/comment]
[/for]

[/file]

[/template]

[template public createTable(c : Class)]
//Will create a table if it doesn't exist already
[name.toLower()/].createTable = function(){
	var database = [name.toLower()/].db;	
	database.transaction(function (tx) {
		tx.executeSql("CREATE TABLE IF NOT EXISTS [name.toUpper()/] ([c.getXisEntityAttributes().getXisEntityAttributeName()->sep(', ')/]),[ '[' /][']'/]");
	});
}
[/template]

[template public insertEntityIntoDB(c : Class)]
//Inserts or Updates (if exists) the Todo in the db. Passing values as parameters
[comment Must see if this is correct, the arguments /]
[name.toLower()/].db.insert = function(name,content){
	var database = [name.toLower()/].db;
	var id = $.QueryString[ '[' /]"id"[']'/];
	
	if(id > 0){
		database.transaction(function(tx){
			tx.executeSql("UPDATE [name.toLower()/] SET name = ?, content=? WHERE id = ?",
			['['/]name, content, id[']'/],
			todolist.onSuccess,
			todolist.onError);
		});
	}else
	{
		database.transaction(function(tx){
			tx.executeSql("INSERT INTO [name.toLower()/](name, content) VALUES (?,?)",
			['['/]name, content[']'/],
			todolist.onSuccess,
			todolist.onError);
		});
	}
	
}
[/template]

[template public dropTable(c : Class)]
[name.toLower()/].dropTable = function() {
	if(confirm('Confirm Deletion?')){	
		var database = [name.toLower()/].db;
		database.transaction(function (tx) {
		  tx.executeSql("DROP TABLE [name.toUpper()/]", [ '[' /][']'/]);
		});
		
		location.reload();
	}else{
		//Do nothing!
	}
}
[/template]


[template public deleteEntry(c : Class)]
//Delete Entry from database given the id
[name.toLower()/].deleteEntry = function(id) {
  	var database = [name.toLower()/].db;
  	database.transaction(function(tx){
   	 tx.executeSql("DELETE FROM [name.toUpper()/] WHERE ID=?", [ '[' /]id[']'/],
   	 [name.toLower()/].onSuccess,
   	 [name.toLower()/].onError);
	});
}
[/template]

[template public onSuccess(c : Class)]
//Function to be called when database queries fail
[name.toLower()/].onError = function(tx, e) {
  alert("There has been an error: " + e.message);
}
[/template]

[template public onError(c : Class)]
//Function to be called when database queries succeeed.
[name.toLower()/].onSuccess = function(tx, r) {
  // empty
}
[/template]

[comment Test /]
[template public selectAllFromTable(c : Class)]
[name.toLower()/].getAllItems = function(renderFunc) {
	var database = [name.toLower()/].db;
	database.transaction(function (tx) {
		tx.executeSql("SELECT * FROM [name.toUpper()/]", [ '[' /][']'/], renderFunc, [name.toLower()/].onError);
	});
}

[comment End of Generic DB JS Instrumentation /]

[comment Site specific JS - Every desired functionallity must be here /]

[comment]
//Iterate through the set and call the function that knows how to print the Todo on each element
	function loadTodoItems(tx, rs) {
	  var todoItems = document.getElementById("ol_todo_list");
	  for (var i=0; i < rs.rows.length; i++) {
	    renderTodo(rs.rows.item(i), todoItems);
	  }
	}
	
	//If there are no Todos hide the DeleteAll button
	function hideDeleteAllButton(tx, rs) {
		if(rs.rows.length == 0){
			$('#btn_delete_all').hide();
		}
	}
	
	//Find the ol, each Todo is an <li> surrounded by an <a> with a <span> with the id inside
	function renderTodo(row, ol) {
		var a = document.createElement('a');
		var li = document.createElement('li');
		var span = document.createElement('span');
		
		ol.appendChild(a);
		a.appendChild(li);
		li.appendChild(span);
		
		a.setAttribute('href', "todolist_detail.html?name=" + row.name + "&content=" + row.content + "&id=" + row.id);
		a.setAttribute('class', 'list-group-item')
		li.setAttribute('class','list-group-item');
		span.setAttribute('class', 'badge')
		span.innerHTML = span.innerHTML + row.id;
        li.innerHTML=li.innerHTML + row.name + ": " + row.content;
	}
	
	//OnClick listener for DeleteAll button
	$('#btn_delete_all').click(function(){
		todolist.dropTable();
	});

//Delete Todo from database given the id
	todolist.deleteTodo = function(id) {
	  var database = todolist.db;
	  database.transaction(function(tx){
	    tx.executeSql("DELETE FROM todo_list WHERE ID=?", [id],
	        todolist.onSuccess,
	        todolist.onError);
	    });
	}
	
	//Create Button OnClick Listener
	$('#btn_create_todo').click(function(){
		var todo_name = $('#name').val();
		var todo_content = $('#content').val();
		
		if(todo_name.length == '' || todo_content.length == '')
		{
			alert('Ambos os campos são obrigatórios');
		}
		else
		{
			todolist.addTodo(todo_name,todo_content);
		}
	});
	
	//Delete Button OnClick Listener
	$('#btn_delete_todo').click(function(){
		var id = $.QueryString["id"];
		
		if(id > 0){
			todolist.deleteTodo(id);
		}
	});

//Function that reads the query string. Should be used like: var param = $.QueryString["param"]; returns the param value;
    $.QueryString = (function(query) {
        if (query == "") return {};
        var parameter = {};
        for (var i = 0; i < query.length; ++i)
        {
            var value=query[i].split('=');
            if (value.length != 2) continue;
            parameter[value[0]] = decodeURIComponent(value[1].replace(/\+/g, " "));
        }
        return parameter;
    })(window.location.search.substr(1).split('&'));

//When page is in edit mode, fill contents, else hide Delete button
	todolist.fillContent = function() {
		var id = $.QueryString["id"];
		var name = $.QueryString["name"];
		var content = $.QueryString["content"];
		
		if(id > 0 && name !== 'undefined' && content !== 'undefined'){
			$('#name').val(name);
			$('#content').val(content);
		}else
		{
			$('#btn_delete_todo').hide();
		}
	}

[/comment]
[/template]